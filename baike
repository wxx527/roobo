
import java.io.IOException;
import java.net.MalformedURLException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;
import com.gargoylesoftware.htmlunit.WebClient;
import com.gargoylesoftware.htmlunit.html.DomNode;
import com.gargoylesoftware.htmlunit.html.HtmlPage;

public class Baike {

	public static void main(String[] args) {
		
		String URL = "http://baike.baidu.com/view/";
        WebClient webClient = new WebClient();
        webClient.getOptions().setJavaScriptEnabled(false);
        webClient.getOptions().setCssEnabled(false);
        try {
        	Class.forName("com.mysql.jdbc.Driver");
    		String URL1="jdbc:mysql://localhost:3306/sp?user=root&password=root&useUnicode=true&characterEncoding=gbk";
    		Connection con = DriverManager.getConnection(URL1);
    		String sql ="insert into baike(title,parms,content,url,html_code) values(?,?,?,?,?)";
    		PreparedStatement stmt = con.prepareStatement(sql);
    		
        	HtmlPage page = null;
        	for(int i=11300;i<20000000;i++){
        		String url = URL+i+".htm";
        		System.err.println(url);
        		try {
					page = webClient.getPage(url);
				} catch (ClassCastException e) {
					continue;
				}
        		DomNode titleNode = page.querySelector(".lemmaWgt-lemmaTitle-title h1");
        		if(titleNode==null){
        			continue;
        		}
        		String title = titleNode.asText();
        		titleNode.getParentNode().remove();
        		DomNode cont = page.querySelector(".main-content");
        		DomNode d1 = cont.querySelector(".top-tool");
        		if(d1!=null){
        			d1.remove();
        		}
        		DomNode hot = cont.querySelector("#hotspotmining");
        		if(hot!=null){
        			hot.remove();
        		}
        		DomNode ml = cont.querySelector(".lemma-catalog");
        		if(ml!=null){
        			ml.remove();
        		}
        		DomNode tag = cont.querySelector("#open-tag");
        		if(tag!=null){
        			tag.remove();
        		}
        		List<DomNode> edits = cont.querySelectorAll(".edit-icon");
        		for (DomNode d : edits) {
        			d.remove();
        		}
        		DomNode kv = cont.querySelector(".basic-info");
        		String baseInfo  ="";
        		if(kv!=null){
        			List<DomNode> ks = kv.querySelectorAll("dt");
        			List<DomNode> vs = kv.querySelectorAll("dd");
        			Map<String,String> kvs = new HashMap<String,String>();
        			for(int j=0;j<ks.size();j++){
        				kvs.put(ks.get(j).asText(), vs.get(j).asText());
        			}
        			kv.remove();
        			baseInfo = kvs.toString();
        		}
        		String conts = cont.asText();
        		
        		//入库
            	stmt.setString(1, title);
            	stmt.setString(2, baseInfo);
            	stmt.setString(3, conts);
            	stmt.setString(4, url);
            	stmt.setString(5, page.asXml());
            	stmt.executeUpdate();
        	}
        	webClient.close();
        } catch (FailingHttpStatusCodeException e) {
			e.printStackTrace();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

}
